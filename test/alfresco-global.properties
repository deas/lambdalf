#    Licensed to the Apache Software Foundation (ASF) under one or more
#    contributor license agreements.  See the NOTICE file distributed with
#    this work for additional information regarding copyright ownership.
#    The ASF licenses this file to You under the Apache License, Version 2.0
#    (the "License"); you may not use this file except in compliance with
#    the License.  You may obtain a copy of the License at
#    
#    http://www.apache.org/licenses/LICENSE-2.0
#    
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.

#     <alfresco.data.location>alf_data_dev</alfresco.data.location>
#     <!-- Alfresco Repo configuration with embedded DB -->
#     <alfresco.db.name>alf_dev</alfresco.db.name>
#     <alfresco.db.username>alfresco</alfresco.db.username>
#     <alfresco.db.password>alfresco</alfresco.db.password>
#     <alfresco.db.params>MODE=PostgreSQL;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=10000;MVCC=TRUE</alfresco.db.params>
#     <!-- By default the H2 embedded database datafile is created under the alfresco.data.location folder -->
#     <alfresco.db.url>jdbc:h2:./${alfresco.data.location}/h2_data/${alfresco.db.name};${alfresco.db.params}</alfresco.db.url>
#     <alfresco.db.datasource.class>org.h2.jdbcx.JdbcDataSource</alfresco.db.datasource.class>

# RUN TIME PROPERTIES
# -------------------

# Sample custom content and index data location
# This will create alf_data Relative to appserver run folder
# In this default file we take the property from the POM (for compatbility with local jetty and jboss deployments) but it can also be edited here.
# dir.root=${alfresco.data.location}
# Database connection properties
# These are also filtered from Maven at build time from POM properties. 
# Alternatively you can directly define them directly here
db.driver=org.h2.jdbcx.JdbcDataSource
# ${alfresco.db.datasource.class}
db.url=jdbc:h2:./target/h2_data/lambdalf;MODE=PostgreSQL;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=10000;MVCC=TRUE
# ${alfresco.db.url}
# db.username=${alfresco.db.username}
# db.password=${alfresco.db.password}
db.pool.initial=10
db.pool.max=100


# Allowed values are: NONE, AUTO, FULL
index.recovery.mode=NONE
# As we run embedded, we set Lucene
index.subsystem.name=lucene

#dir.keystore=.
#keystore.password=storepassword
#metadata.password=metapassword

# Fail or not when there are node integrity checker errors
integrity.failOnError=true

# File servers related properties
# For local builds we disable CIFS and FTP. Edit the following property to reenable them
smb.server.enabled=false
smb.server.name=CFS_SHARE_LOCAL
smb.server.domain=mycompany.com
smb.server.bindto=127.0.0.1
smb.tcpip.port=1445
netbios.session.port=1139
netbios.name.port=1137
netbios.datagram.port=1138
ftp.server.enables=false
ftp.port=1121
ftp.authenticator=alfresco

# authentication.chain=alfrescoNtlm1:alfrescoNtlm

avm.rmi.service.port=51501
avmsync.rmi.service.port=51502
authentication.rmi.service.port=51504
repo.rmi.service.port=51505
action.rmi.service.port=51506
deployment.rmi.service.port=51507
monitor.rmi.service.port=51508
